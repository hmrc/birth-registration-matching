FORMAT: 1A

# Birth Matching Registration Service

NOTE: This is a draft of the API and is subject to change.

Birth Matching Registration Service is a service that allows you to check if the GRO for England and Wales contains a birth registration record for a given child.

## Group Birth Registration Match

## Check birth record exists for specific birth reference number [/birth-registration-matching/match]

Check for an existing birth record based on a birth reference number

+ birthReferenceNumber - unique reference number found on birth certificate (min 9 characters)
+ firstName - childs firstname (max 128 characters)
+ lastName - childs lastname (max 200 characters)
+ dateOfBirth - childs date of birth (yyyy-mm-dd)
+ whereBirthRegistered - where is the birth registered (england, wales)

# Check Birth [POST]

+ Request no match sample request (application/json; charset=utf-8)

  + Headers
  
            Accept: application/vnd.hmrc.1.0+json
            Audit-Source: dfs

  + Schema
  
            {
              "properties": {
              "birthReferenceNumber": {
              "type": "string",
              "required": false,
              "pattern": "/^-?\d+$",
              "description": "Unique reference number found on birth certificate"
              },
              "firstName": {
              "type": "string",
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Childs firstname"
              },
              "lastName": {
              "type": "string",
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Childs lastname"
              },
              "dateOfBirth": {
              "type": "string",
              "required": true,
              "pattern": "/[0-9]{4}-[0-1][0-9]-[0-3][0-9]$/",
              "description": "Childs date of birth"
              },
              "whereBirthRegistered": {
              "type": "string",
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Where the birth is registered"
              },
              }
            }
            
    + Body
    
            {
              "birthReferenceNumber": "123456789",
              "firstName": "John",
              "lastName": "Smith",
              "dateOfBirth": "2014-05-18",
              "whereBirthRegistered": "england"
            }

+ Response 200 (application/json; charset=utf-8)

    + Headers

  + Body

            {
              "matched": false
            }

+ Response 400

  + Body

+ Response 500

   + Body
            
# Check Birth (match) [POST]

+ Request match sample request (application/json; charset=utf-8)

  + Headers
  
            Accept: application/vnd.hmrc.1.0+json
            Audit-Source: dfs

  + Schema
  
            {
              "properties": {T
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Where the birth is registered"
              },
              }
            }
            
    + Body
    
            {
              "birthReferenceNumber" : "500035710",
              "firstName": "Adam TEST",
              "lastName": "SMITH",
              "dateOfBirth": "2006-11-12",
              "whereBirthRegistered" : "england"
            }

+ Response 200 (application/json; charset=utf-8)

    + Headers
      

  + Body
            {
              "matched": true
            }

+ Response 400

  + Body


+ Response 500

   + Body

## Check birth record exists for child details [/birth-registration-matching/match]

Check for an existing birth record based on child details

+ firstName - childs firstname (max 128 characters)
+ lastName - childs lastname (max 200 characters)
+ dateOfBirth - childs date of birth (yyyy-mm-dd)
+ whereBirthRegistered - where is the birth registered (england, wales)

# Check Birth for Child Details [POST]

+ Request no match sample request (application/json; charset=utf-8)

  + Headers

            Accept: application/vnd.hmrc.1.0+json
            Audit-Source: dfs

  + Schema

            {
              "properties": {
              "birthReferenceNumber": {
              "type": "string",
              "required": false,
              "pattern": "/^-?\d+$",
              "description": "Unique reference number found on birth certificate"
              },
              "firstName": {
              "type": "string",
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Childs firstname"
              },
              "lastName": {
              "type": "string",
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Childs lastname"
              },
              "dateOfBirth": {
              "type": "string",
              "required": true,
              "pattern": "/[0-9]{4}-[0-1][0-9]-[0-3][0-9]$/",
              "description": "Childs date of birth"
              },
              "whereBirthRegistered": {
              "type": "string",
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Where the birth is registered"
              },
              }
            }

    + Body

            {
              "firstName": "John",
              "lastName": "Smith",
              "dateOfBirth": "2014-05-18",
              "whereBirthRegistered": "england"
            }

+ Response 200 (application/json; charset=utf-8)

    + Headers

  + Body

            {
              "matched": false
            }

# Check Birth for Child Details (match) [POST]

+ Request match sample request (application/json; charset=utf-8)

  + Headers

            Accept: application/vnd.hmrc.1.0+json
            Audit-Source: dfs

  + Schema

            {
              "properties": {T
              "required": true,
              "pattern": "/^[\w\s]+$/",
              "description": "Where the birth is registered"
              },
              }
            }

    + Body

            {
              "firstName": "Adam TEST",
              "lastName": "SMITH",
              "dateOfBirth": "2006-11-12",
              "whereBirthRegistered" : "england"
            }

+ Response 200 (application/json; charset=utf-8)

    + Headers
      

  + Body
            {
              "matched": true
            }